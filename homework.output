Terminals unused in grammar

   CHAR
   FOR
   ENDFOR


Grammar

    0 $accept: program $end

    1 program: glb_declarations main_body

    2 glb_declarations: glb_declarations var_decl
    3                 | glb_declarations fct_decl
    4                 | glb_declarations class_decl
    5                 | glb_declarations struct_decl
    6                 | %empty

    7 $@1: %empty

    8 struct_decl: STRUC $@1 ID struct_body STRUCEND

    9 struct_body: struct_body var_decl
   10            | %empty

   11 $@2: %empty

   12 class_decl: CLAS $@2 ID class_body CLASEND

   13 class_body: class_body acces_modifier var_decl
   14           | class_body acces_modifier fct_decl
   15           | class_body var_decl
   16           | class_body fct_decl
   17           | %empty

   18 acces_modifier: PUBLIC
   19               | PRIVATE
   20               | PROTECTED

   21 var_decl: var_type variable_list ';'

   22 variable_list: variable_list ',' ID
   23              | ID ASGN expression
   24              | ID
   25              | variable_list ',' ID ASGN expression

   26 $@3: %empty

   27 @4: %empty

   28 $@5: %empty

   29 fct_decl: var_type ID '(' $@3 param_list ')' @4 FBEGIN $@5 body FEND

   30 @6: %empty

   31 $@7: %empty

   32 $@8: %empty

   33 fct_decl: var_type ID '(' @6 ')' $@7 FBEGIN $@8 body FEND

   34 param_list: param_list ',' param
   35           | param

   36 param: var_type ID

   37 var_type: INT
   38         | BOOL
   39         | STRING
   40         | FLOAT

   41 $@9: %empty

   42 $@10: %empty

   43 main_body: BEGIN_P $@9 body $@10 END_P

   44 body: body statement
   45     | %empty

   46 statement: expression ';'
   47          | ID ASGN expression ';'
   48          | control
   49          | var_decl
   50          | print_call ';'
   51          | EVAL_FCT '(' expression ')' ';'

   52 @11: %empty

   53 fct_call: ID '(' @11 param_called_list ')'
   54         | ID '(' ')'

   55 param_called_list: param_called_list ',' expression
   56                  | expression

   57 $@12: %empty

   58 control: WHILE $@12 '(' binary_expression ')' body ENDWHILE
   59        | if2

   60 $@13: %empty

   61 if2: $@13 if

   62 if: IF '(' binary_expression ')' THEN body ENDIF

   63 $@14: %empty

   64 if: IF '(' binary_expression ')' THEN body ELSE $@14 body ENDIF

   65 $@15: %empty

   66 if: IF '(' binary_expression ')' THEN body $@15 eif ENDIF

   67 eif: ELSE_IF '(' binary_expression ')' THEN body

   68 $@16: %empty

   69 eif: ELSE_IF '(' binary_expression ')' THEN body ELSE $@16 body

   70 $@17: %empty

   71 eif: ELSE_IF '(' binary_expression ')' THEN body $@17 eif

   72 print_call: PRINT '(' expression ')'

   73 expression: INTVAL
   74           | STRVAL
   75           | BOOLVAL
   76           | FLOATVAL
   77           | ID
   78           | expression PLUS expression
   79           | expression MINUS expression
   80           | expression MTP expression
   81           | expression DVD expression
   82           | expression MOD expression
   83           | binary_expression
   84           | '(' expression ')'
   85           | CALL fct_call

   86 binary_expression: expression LWR expression
   87                  | expression GTR expression
   88                  | expression LEQ expression
   89                  | expression GEQ expression
   90                  | expression NEQ expression
   91                  | expression EQ expression

   92 @18: %empty

   93 binary_expression: expression AND expression @18 expression OR expression


Terminals, with rules where they appear

$end (0) 0
'(' (40) 29 33 51 53 54 58 62 64 66 67 69 71 72 84
')' (41) 29 33 51 53 54 58 62 64 66 67 69 71 72 84
',' (44) 22 25 34 55
';' (59) 21 46 47 50 51
error (256)
INT (258) 37
FLOAT (259) 40
CHAR (260)
STRING (261) 39
BOOL (262) 38
ID (263) 8 12 22 23 24 25 29 33 36 47 53 54 77
BEGIN_P (264) 43
END_P (265) 43
STRUC (266) 8
STRUCEND (267) 8
CLAS (268) 12
CLASEND (269) 12
PUBLIC (270) 18
PRIVATE (271) 19
PROTECTED (272) 20
IF (273) 62 64 66
THEN (274) 62 64 66 67 69 71
ELSE_IF (275) 67 69 71
ENDIF (276) 62 64 66
ELSE (277) 64 69
FOR (278)
ENDFOR (279)
WHILE (280) 58
ENDWHILE (281) 58
FBEGIN (282) 29 33
FEND (283) 29 33
LWR (284) 86
LEQ (285) 88
GTR (286) 87
GEQ (287) 89
EQ (288) 91
NEQ (289) 90
PLUS (290) 78
MINUS (291) 79
MTP (292) 80
DVD (293) 81
MOD (294) 82
AND (295) 93
OR (296) 93
PRINT (297) 72
EVAL_FCT (298) 51
CALL (299) 85
ASGN (300) 23 25 47
STRVAL (301) 74
INTVAL (302) 73
BOOLVAL (303) 75
FLOATVAL (304) 76


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0
glb_declarations (56)
    on left: 2 3 4 5 6, on right: 1 2 3 4 5
struct_decl (57)
    on left: 8, on right: 5
$@1 (58)
    on left: 7, on right: 8
struct_body (59)
    on left: 9 10, on right: 8 9
class_decl (60)
    on left: 12, on right: 4
$@2 (61)
    on left: 11, on right: 12
class_body (62)
    on left: 13 14 15 16 17, on right: 12 13 14 15 16
acces_modifier (63)
    on left: 18 19 20, on right: 13 14
var_decl (64)
    on left: 21, on right: 2 9 13 15 49
variable_list (65)
    on left: 22 23 24 25, on right: 21 22 25
fct_decl (66)
    on left: 29 33, on right: 3 14 16
$@3 (67)
    on left: 26, on right: 29
@4 (68)
    on left: 27, on right: 29
$@5 (69)
    on left: 28, on right: 29
@6 (70)
    on left: 30, on right: 33
$@7 (71)
    on left: 31, on right: 33
$@8 (72)
    on left: 32, on right: 33
param_list (73)
    on left: 34 35, on right: 29 34
param (74)
    on left: 36, on right: 34 35
var_type (75)
    on left: 37 38 39 40, on right: 21 29 33 36
main_body (76)
    on left: 43, on right: 1
$@9 (77)
    on left: 41, on right: 43
$@10 (78)
    on left: 42, on right: 43
body (79)
    on left: 44 45, on right: 29 33 43 44 58 62 64 66 67 69 71
statement (80)
    on left: 46 47 48 49 50 51, on right: 44
fct_call (81)
    on left: 53 54, on right: 85
@11 (82)
    on left: 52, on right: 53
param_called_list (83)
    on left: 55 56, on right: 53 55
control (84)
    on left: 58 59, on right: 48
$@12 (85)
    on left: 57, on right: 58
if2 (86)
    on left: 61, on right: 59
$@13 (87)
    on left: 60, on right: 61
if (88)
    on left: 62 64 66, on right: 61
$@14 (89)
    on left: 63, on right: 64
$@15 (90)
    on left: 65, on right: 66
eif (91)
    on left: 67 69 71, on right: 66 71
$@16 (92)
    on left: 68, on right: 69
$@17 (93)
    on left: 70, on right: 71
print_call (94)
    on left: 72, on right: 50
expression (95)
    on left: 73 74 75 76 77 78 79 80 81 82 83 84 85, on right: 23 25
    46 47 51 55 56 72 78 79 80 81 82 84 86 87 88 89 90 91 93
binary_expression (96)
    on left: 86 87 88 89 90 91 93, on right: 58 62 64 66 67 69 71 83
@18 (97)
    on left: 92, on right: 93


State 0

    0 $accept: . program $end

    $default  reduce using rule 6 (glb_declarations)

    program           go to state 1
    glb_declarations  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: glb_declarations . main_body
    2 glb_declarations: glb_declarations . var_decl
    3                 | glb_declarations . fct_decl
    4                 | glb_declarations . class_decl
    5                 | glb_declarations . struct_decl

    INT      shift, and go to state 4
    FLOAT    shift, and go to state 5
    STRING   shift, and go to state 6
    BOOL     shift, and go to state 7
    BEGIN_P  shift, and go to state 8
    STRUC    shift, and go to state 9
    CLAS     shift, and go to state 10

    struct_decl  go to state 11
    class_decl   go to state 12
    var_decl     go to state 13
    fct_decl     go to state 14
    var_type     go to state 15
    main_body    go to state 16


State 3

    0 $accept: program $end .

    $default  accept


State 4

   37 var_type: INT .

    $default  reduce using rule 37 (var_type)


State 5

   40 var_type: FLOAT .

    $default  reduce using rule 40 (var_type)


State 6

   39 var_type: STRING .

    $default  reduce using rule 39 (var_type)


State 7

   38 var_type: BOOL .

    $default  reduce using rule 38 (var_type)


State 8

   43 main_body: BEGIN_P . $@9 body $@10 END_P

    $default  reduce using rule 41 ($@9)

    $@9  go to state 17


State 9

    8 struct_decl: STRUC . $@1 ID struct_body STRUCEND

    $default  reduce using rule 7 ($@1)

    $@1  go to state 18


State 10

   12 class_decl: CLAS . $@2 ID class_body CLASEND

    $default  reduce using rule 11 ($@2)

    $@2  go to state 19


State 11

    5 glb_declarations: glb_declarations struct_decl .

    $default  reduce using rule 5 (glb_declarations)


State 12

    4 glb_declarations: glb_declarations class_decl .

    $default  reduce using rule 4 (glb_declarations)


State 13

    2 glb_declarations: glb_declarations var_decl .

    $default  reduce using rule 2 (glb_declarations)


State 14

    3 glb_declarations: glb_declarations fct_decl .

    $default  reduce using rule 3 (glb_declarations)


State 15

   21 var_decl: var_type . variable_list ';'
   29 fct_decl: var_type . ID '(' $@3 param_list ')' @4 FBEGIN $@5 body FEND
   33         | var_type . ID '(' @6 ')' $@7 FBEGIN $@8 body FEND

    ID  shift, and go to state 20

    variable_list  go to state 21


State 16

    1 program: glb_declarations main_body .

    $default  reduce using rule 1 (program)


State 17

   43 main_body: BEGIN_P $@9 . body $@10 END_P

    $default  reduce using rule 45 (body)

    body  go to state 22


State 18

    8 struct_decl: STRUC $@1 . ID struct_body STRUCEND

    ID  shift, and go to state 23


State 19

   12 class_decl: CLAS $@2 . ID class_body CLASEND

    ID  shift, and go to state 24


State 20

   23 variable_list: ID . ASGN expression
   24              | ID .
   29 fct_decl: var_type ID . '(' $@3 param_list ')' @4 FBEGIN $@5 body FEND
   33         | var_type ID . '(' @6 ')' $@7 FBEGIN $@8 body FEND

    ASGN  shift, and go to state 25
    '('   shift, and go to state 26

    $default  reduce using rule 24 (variable_list)


State 21

   21 var_decl: var_type variable_list . ';'
   22 variable_list: variable_list . ',' ID
   25              | variable_list . ',' ID ASGN expression

    ';'  shift, and go to state 27
    ','  shift, and go to state 28


State 22

   43 main_body: BEGIN_P $@9 body . $@10 END_P
   44 body: body . statement

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    STRING    shift, and go to state 6
    BOOL      shift, and go to state 7
    ID        shift, and go to state 29
    WHILE     shift, and go to state 30
    PRINT     shift, and go to state 31
    EVAL_FCT  shift, and go to state 32
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    IF        reduce using rule 60 ($@13)
    $default  reduce using rule 42 ($@10)

    var_decl           go to state 39
    var_type           go to state 40
    $@10               go to state 41
    statement          go to state 42
    control            go to state 43
    if2                go to state 44
    $@13               go to state 45
    print_call         go to state 46
    expression         go to state 47
    binary_expression  go to state 48


State 23

    8 struct_decl: STRUC $@1 ID . struct_body STRUCEND

    $default  reduce using rule 10 (struct_body)

    struct_body  go to state 49


State 24

   12 class_decl: CLAS $@2 ID . class_body CLASEND

    $default  reduce using rule 17 (class_body)

    class_body  go to state 50


State 25

   23 variable_list: ID ASGN . expression

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 52
    binary_expression  go to state 48


State 26

   29 fct_decl: var_type ID '(' . $@3 param_list ')' @4 FBEGIN $@5 body FEND
   33         | var_type ID '(' . @6 ')' $@7 FBEGIN $@8 body FEND

    ')'       reduce using rule 30 (@6)
    $default  reduce using rule 26 ($@3)

    $@3  go to state 53
    @6   go to state 54


State 27

   21 var_decl: var_type variable_list ';' .

    $default  reduce using rule 21 (var_decl)


State 28

   22 variable_list: variable_list ',' . ID
   25              | variable_list ',' . ID ASGN expression

    ID  shift, and go to state 55


State 29

   47 statement: ID . ASGN expression ';'
   77 expression: ID .

    ASGN  shift, and go to state 56

    $default  reduce using rule 77 (expression)


State 30

   58 control: WHILE . $@12 '(' binary_expression ')' body ENDWHILE

    $default  reduce using rule 57 ($@12)

    $@12  go to state 57


State 31

   72 print_call: PRINT . '(' expression ')'

    '('  shift, and go to state 58


State 32

   51 statement: EVAL_FCT . '(' expression ')' ';'

    '('  shift, and go to state 59


State 33

   85 expression: CALL . fct_call

    ID  shift, and go to state 60

    fct_call  go to state 61


State 34

   74 expression: STRVAL .

    $default  reduce using rule 74 (expression)


State 35

   73 expression: INTVAL .

    $default  reduce using rule 73 (expression)


State 36

   75 expression: BOOLVAL .

    $default  reduce using rule 75 (expression)


State 37

   76 expression: FLOATVAL .

    $default  reduce using rule 76 (expression)


State 38

   84 expression: '(' . expression ')'

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 62
    binary_expression  go to state 48


State 39

   49 statement: var_decl .

    $default  reduce using rule 49 (statement)


State 40

   21 var_decl: var_type . variable_list ';'

    ID  shift, and go to state 63

    variable_list  go to state 21


State 41

   43 main_body: BEGIN_P $@9 body $@10 . END_P

    END_P  shift, and go to state 64


State 42

   44 body: body statement .

    $default  reduce using rule 44 (body)


State 43

   48 statement: control .

    $default  reduce using rule 48 (statement)


State 44

   59 control: if2 .

    $default  reduce using rule 59 (control)


State 45

   61 if2: $@13 . if

    IF  shift, and go to state 65

    if  go to state 66


State 46

   50 statement: print_call . ';'

    ';'  shift, and go to state 67


State 47

   46 statement: expression . ';'
   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression

    LWR    shift, and go to state 68
    LEQ    shift, and go to state 69
    GTR    shift, and go to state 70
    GEQ    shift, and go to state 71
    EQ     shift, and go to state 72
    NEQ    shift, and go to state 73
    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MTP    shift, and go to state 76
    DVD    shift, and go to state 77
    MOD    shift, and go to state 78
    AND    shift, and go to state 79
    ';'    shift, and go to state 80


State 48

   83 expression: binary_expression .

    $default  reduce using rule 83 (expression)


State 49

    8 struct_decl: STRUC $@1 ID struct_body . STRUCEND
    9 struct_body: struct_body . var_decl

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    STRING    shift, and go to state 6
    BOOL      shift, and go to state 7
    STRUCEND  shift, and go to state 81

    var_decl  go to state 82
    var_type  go to state 40


State 50

   12 class_decl: CLAS $@2 ID class_body . CLASEND
   13 class_body: class_body . acces_modifier var_decl
   14           | class_body . acces_modifier fct_decl
   15           | class_body . var_decl
   16           | class_body . fct_decl

    INT        shift, and go to state 4
    FLOAT      shift, and go to state 5
    STRING     shift, and go to state 6
    BOOL       shift, and go to state 7
    CLASEND    shift, and go to state 83
    PUBLIC     shift, and go to state 84
    PRIVATE    shift, and go to state 85
    PROTECTED  shift, and go to state 86

    acces_modifier  go to state 87
    var_decl        go to state 88
    fct_decl        go to state 89
    var_type        go to state 15


State 51

   77 expression: ID .

    $default  reduce using rule 77 (expression)


State 52

   23 variable_list: ID ASGN expression .
   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression

    LWR    shift, and go to state 68
    LEQ    shift, and go to state 69
    GTR    shift, and go to state 70
    GEQ    shift, and go to state 71
    EQ     shift, and go to state 72
    NEQ    shift, and go to state 73
    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MTP    shift, and go to state 76
    DVD    shift, and go to state 77
    MOD    shift, and go to state 78
    AND    shift, and go to state 79

    $default  reduce using rule 23 (variable_list)


State 53

   29 fct_decl: var_type ID '(' $@3 . param_list ')' @4 FBEGIN $@5 body FEND

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    STRING  shift, and go to state 6
    BOOL    shift, and go to state 7

    param_list  go to state 90
    param       go to state 91
    var_type    go to state 92


State 54

   33 fct_decl: var_type ID '(' @6 . ')' $@7 FBEGIN $@8 body FEND

    ')'  shift, and go to state 93


State 55

   22 variable_list: variable_list ',' ID .
   25              | variable_list ',' ID . ASGN expression

    ASGN  shift, and go to state 94

    $default  reduce using rule 22 (variable_list)


State 56

   47 statement: ID ASGN . expression ';'

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 95
    binary_expression  go to state 48


State 57

   58 control: WHILE $@12 . '(' binary_expression ')' body ENDWHILE

    '('  shift, and go to state 96


State 58

   72 print_call: PRINT '(' . expression ')'

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 97
    binary_expression  go to state 48


State 59

   51 statement: EVAL_FCT '(' . expression ')' ';'

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 98
    binary_expression  go to state 48


State 60

   53 fct_call: ID . '(' @11 param_called_list ')'
   54         | ID . '(' ')'

    '('  shift, and go to state 99


State 61

   85 expression: CALL fct_call .

    $default  reduce using rule 85 (expression)


State 62

   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   84           | '(' expression . ')'
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression

    LWR    shift, and go to state 68
    LEQ    shift, and go to state 69
    GTR    shift, and go to state 70
    GEQ    shift, and go to state 71
    EQ     shift, and go to state 72
    NEQ    shift, and go to state 73
    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MTP    shift, and go to state 76
    DVD    shift, and go to state 77
    MOD    shift, and go to state 78
    AND    shift, and go to state 79
    ')'    shift, and go to state 100


State 63

   23 variable_list: ID . ASGN expression
   24              | ID .

    ASGN  shift, and go to state 25

    $default  reduce using rule 24 (variable_list)


State 64

   43 main_body: BEGIN_P $@9 body $@10 END_P .

    $default  reduce using rule 43 (main_body)


State 65

   62 if: IF . '(' binary_expression ')' THEN body ENDIF
   64   | IF . '(' binary_expression ')' THEN body ELSE $@14 body ENDIF
   66   | IF . '(' binary_expression ')' THEN body $@15 eif ENDIF

    '('  shift, and go to state 101


State 66

   61 if2: $@13 if .

    $default  reduce using rule 61 (if2)


State 67

   50 statement: print_call ';' .

    $default  reduce using rule 50 (statement)


State 68

   86 binary_expression: expression LWR . expression

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 102
    binary_expression  go to state 48


State 69

   88 binary_expression: expression LEQ . expression

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 103
    binary_expression  go to state 48


State 70

   87 binary_expression: expression GTR . expression

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 104
    binary_expression  go to state 48


State 71

   89 binary_expression: expression GEQ . expression

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 105
    binary_expression  go to state 48


State 72

   91 binary_expression: expression EQ . expression

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 106
    binary_expression  go to state 48


State 73

   90 binary_expression: expression NEQ . expression

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 107
    binary_expression  go to state 48


State 74

   78 expression: expression PLUS . expression

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 108
    binary_expression  go to state 48


State 75

   79 expression: expression MINUS . expression

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 109
    binary_expression  go to state 48


State 76

   80 expression: expression MTP . expression

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 110
    binary_expression  go to state 48


State 77

   81 expression: expression DVD . expression

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 111
    binary_expression  go to state 48


State 78

   82 expression: expression MOD . expression

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 112
    binary_expression  go to state 48


State 79

   93 binary_expression: expression AND . expression @18 expression OR expression

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 113
    binary_expression  go to state 48


State 80

   46 statement: expression ';' .

    $default  reduce using rule 46 (statement)


State 81

    8 struct_decl: STRUC $@1 ID struct_body STRUCEND .

    $default  reduce using rule 8 (struct_decl)


State 82

    9 struct_body: struct_body var_decl .

    $default  reduce using rule 9 (struct_body)


State 83

   12 class_decl: CLAS $@2 ID class_body CLASEND .

    $default  reduce using rule 12 (class_decl)


State 84

   18 acces_modifier: PUBLIC .

    $default  reduce using rule 18 (acces_modifier)


State 85

   19 acces_modifier: PRIVATE .

    $default  reduce using rule 19 (acces_modifier)


State 86

   20 acces_modifier: PROTECTED .

    $default  reduce using rule 20 (acces_modifier)


State 87

   13 class_body: class_body acces_modifier . var_decl
   14           | class_body acces_modifier . fct_decl

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    STRING  shift, and go to state 6
    BOOL    shift, and go to state 7

    var_decl  go to state 114
    fct_decl  go to state 115
    var_type  go to state 15


State 88

   15 class_body: class_body var_decl .

    $default  reduce using rule 15 (class_body)


State 89

   16 class_body: class_body fct_decl .

    $default  reduce using rule 16 (class_body)


State 90

   29 fct_decl: var_type ID '(' $@3 param_list . ')' @4 FBEGIN $@5 body FEND
   34 param_list: param_list . ',' param

    ','  shift, and go to state 116
    ')'  shift, and go to state 117


State 91

   35 param_list: param .

    $default  reduce using rule 35 (param_list)


State 92

   36 param: var_type . ID

    ID  shift, and go to state 118


State 93

   33 fct_decl: var_type ID '(' @6 ')' . $@7 FBEGIN $@8 body FEND

    $default  reduce using rule 31 ($@7)

    $@7  go to state 119


State 94

   25 variable_list: variable_list ',' ID ASGN . expression

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 120
    binary_expression  go to state 48


State 95

   47 statement: ID ASGN expression . ';'
   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression

    LWR    shift, and go to state 68
    LEQ    shift, and go to state 69
    GTR    shift, and go to state 70
    GEQ    shift, and go to state 71
    EQ     shift, and go to state 72
    NEQ    shift, and go to state 73
    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MTP    shift, and go to state 76
    DVD    shift, and go to state 77
    MOD    shift, and go to state 78
    AND    shift, and go to state 79
    ';'    shift, and go to state 121


State 96

   58 control: WHILE $@12 '(' . binary_expression ')' body ENDWHILE

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 122
    binary_expression  go to state 123


State 97

   72 print_call: PRINT '(' expression . ')'
   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression

    LWR    shift, and go to state 68
    LEQ    shift, and go to state 69
    GTR    shift, and go to state 70
    GEQ    shift, and go to state 71
    EQ     shift, and go to state 72
    NEQ    shift, and go to state 73
    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MTP    shift, and go to state 76
    DVD    shift, and go to state 77
    MOD    shift, and go to state 78
    AND    shift, and go to state 79
    ')'    shift, and go to state 124


State 98

   51 statement: EVAL_FCT '(' expression . ')' ';'
   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression

    LWR    shift, and go to state 68
    LEQ    shift, and go to state 69
    GTR    shift, and go to state 70
    GEQ    shift, and go to state 71
    EQ     shift, and go to state 72
    NEQ    shift, and go to state 73
    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MTP    shift, and go to state 76
    DVD    shift, and go to state 77
    MOD    shift, and go to state 78
    AND    shift, and go to state 79
    ')'    shift, and go to state 125


State 99

   53 fct_call: ID '(' . @11 param_called_list ')'
   54         | ID '(' . ')'

    ')'  shift, and go to state 126

    $default  reduce using rule 52 (@11)

    @11  go to state 127


State 100

   84 expression: '(' expression ')' .

    $default  reduce using rule 84 (expression)


State 101

   62 if: IF '(' . binary_expression ')' THEN body ENDIF
   64   | IF '(' . binary_expression ')' THEN body ELSE $@14 body ENDIF
   66   | IF '(' . binary_expression ')' THEN body $@15 eif ENDIF

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 122
    binary_expression  go to state 128


State 102

   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   86                  | expression LWR expression .
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MTP    shift, and go to state 76
    DVD    shift, and go to state 77
    MOD    shift, and go to state 78

    $default  reduce using rule 86 (binary_expression)


State 103

   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   88                  | expression LEQ expression .
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MTP    shift, and go to state 76
    DVD    shift, and go to state 77
    MOD    shift, and go to state 78

    $default  reduce using rule 88 (binary_expression)


State 104

   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   87                  | expression GTR expression .
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MTP    shift, and go to state 76
    DVD    shift, and go to state 77
    MOD    shift, and go to state 78

    $default  reduce using rule 87 (binary_expression)


State 105

   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   89                  | expression GEQ expression .
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MTP    shift, and go to state 76
    DVD    shift, and go to state 77
    MOD    shift, and go to state 78

    $default  reduce using rule 89 (binary_expression)


State 106

   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   91                  | expression EQ expression .
   93                  | expression . AND expression @18 expression OR expression

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MTP    shift, and go to state 76
    DVD    shift, and go to state 77
    MOD    shift, and go to state 78

    $default  reduce using rule 91 (binary_expression)


State 107

   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   90                  | expression NEQ expression .
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MTP    shift, and go to state 76
    DVD    shift, and go to state 77
    MOD    shift, and go to state 78

    $default  reduce using rule 90 (binary_expression)


State 108

   78 expression: expression . PLUS expression
   78           | expression PLUS expression .
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression

    MTP  shift, and go to state 76
    DVD  shift, and go to state 77
    MOD  shift, and go to state 78

    $default  reduce using rule 78 (expression)


State 109

   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   79           | expression MINUS expression .
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression

    MTP  shift, and go to state 76
    DVD  shift, and go to state 77
    MOD  shift, and go to state 78

    $default  reduce using rule 79 (expression)


State 110

   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   80           | expression MTP expression .
   81           | expression . DVD expression
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression

    $default  reduce using rule 80 (expression)


State 111

   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   81           | expression DVD expression .
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression

    $default  reduce using rule 81 (expression)


State 112

   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   82           | expression MOD expression .
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression

    $default  reduce using rule 82 (expression)


State 113

   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression
   93                  | expression AND expression . @18 expression OR expression

    LWR    shift, and go to state 68
    LEQ    shift, and go to state 69
    GTR    shift, and go to state 70
    GEQ    shift, and go to state 71
    EQ     shift, and go to state 72
    NEQ    shift, and go to state 73
    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MTP    shift, and go to state 76
    DVD    shift, and go to state 77
    MOD    shift, and go to state 78
    AND    shift, and go to state 79

    $default  reduce using rule 92 (@18)

    @18  go to state 129


State 114

   13 class_body: class_body acces_modifier var_decl .

    $default  reduce using rule 13 (class_body)


State 115

   14 class_body: class_body acces_modifier fct_decl .

    $default  reduce using rule 14 (class_body)


State 116

   34 param_list: param_list ',' . param

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    STRING  shift, and go to state 6
    BOOL    shift, and go to state 7

    param     go to state 130
    var_type  go to state 92


State 117

   29 fct_decl: var_type ID '(' $@3 param_list ')' . @4 FBEGIN $@5 body FEND

    $default  reduce using rule 27 (@4)

    @4  go to state 131


State 118

   36 param: var_type ID .

    $default  reduce using rule 36 (param)


State 119

   33 fct_decl: var_type ID '(' @6 ')' $@7 . FBEGIN $@8 body FEND

    FBEGIN  shift, and go to state 132


State 120

   25 variable_list: variable_list ',' ID ASGN expression .
   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression

    LWR    shift, and go to state 68
    LEQ    shift, and go to state 69
    GTR    shift, and go to state 70
    GEQ    shift, and go to state 71
    EQ     shift, and go to state 72
    NEQ    shift, and go to state 73
    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MTP    shift, and go to state 76
    DVD    shift, and go to state 77
    MOD    shift, and go to state 78
    AND    shift, and go to state 79

    $default  reduce using rule 25 (variable_list)


State 121

   47 statement: ID ASGN expression ';' .

    $default  reduce using rule 47 (statement)


State 122

   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression

    LWR    shift, and go to state 68
    LEQ    shift, and go to state 69
    GTR    shift, and go to state 70
    GEQ    shift, and go to state 71
    EQ     shift, and go to state 72
    NEQ    shift, and go to state 73
    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MTP    shift, and go to state 76
    DVD    shift, and go to state 77
    MOD    shift, and go to state 78
    AND    shift, and go to state 79


State 123

   58 control: WHILE $@12 '(' binary_expression . ')' body ENDWHILE
   83 expression: binary_expression .

    ')'  shift, and go to state 133

    $default  reduce using rule 83 (expression)


State 124

   72 print_call: PRINT '(' expression ')' .

    $default  reduce using rule 72 (print_call)


State 125

   51 statement: EVAL_FCT '(' expression ')' . ';'

    ';'  shift, and go to state 134


State 126

   54 fct_call: ID '(' ')' .

    $default  reduce using rule 54 (fct_call)


State 127

   53 fct_call: ID '(' @11 . param_called_list ')'

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    param_called_list  go to state 135
    expression         go to state 136
    binary_expression  go to state 48


State 128

   62 if: IF '(' binary_expression . ')' THEN body ENDIF
   64   | IF '(' binary_expression . ')' THEN body ELSE $@14 body ENDIF
   66   | IF '(' binary_expression . ')' THEN body $@15 eif ENDIF
   83 expression: binary_expression .

    ')'  shift, and go to state 137

    $default  reduce using rule 83 (expression)


State 129

   93 binary_expression: expression AND expression @18 . expression OR expression

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 138
    binary_expression  go to state 48


State 130

   34 param_list: param_list ',' param .

    $default  reduce using rule 34 (param_list)


State 131

   29 fct_decl: var_type ID '(' $@3 param_list ')' @4 . FBEGIN $@5 body FEND

    FBEGIN  shift, and go to state 139


State 132

   33 fct_decl: var_type ID '(' @6 ')' $@7 FBEGIN . $@8 body FEND

    $default  reduce using rule 32 ($@8)

    $@8  go to state 140


State 133

   58 control: WHILE $@12 '(' binary_expression ')' . body ENDWHILE

    $default  reduce using rule 45 (body)

    body  go to state 141


State 134

   51 statement: EVAL_FCT '(' expression ')' ';' .

    $default  reduce using rule 51 (statement)


State 135

   53 fct_call: ID '(' @11 param_called_list . ')'
   55 param_called_list: param_called_list . ',' expression

    ','  shift, and go to state 142
    ')'  shift, and go to state 143


State 136

   56 param_called_list: expression .
   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression

    LWR    shift, and go to state 68
    LEQ    shift, and go to state 69
    GTR    shift, and go to state 70
    GEQ    shift, and go to state 71
    EQ     shift, and go to state 72
    NEQ    shift, and go to state 73
    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MTP    shift, and go to state 76
    DVD    shift, and go to state 77
    MOD    shift, and go to state 78
    AND    shift, and go to state 79

    $default  reduce using rule 56 (param_called_list)


State 137

   62 if: IF '(' binary_expression ')' . THEN body ENDIF
   64   | IF '(' binary_expression ')' . THEN body ELSE $@14 body ENDIF
   66   | IF '(' binary_expression ')' . THEN body $@15 eif ENDIF

    THEN  shift, and go to state 144


State 138

   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression
   93                  | expression AND expression @18 expression . OR expression

    LWR    shift, and go to state 68
    LEQ    shift, and go to state 69
    GTR    shift, and go to state 70
    GEQ    shift, and go to state 71
    EQ     shift, and go to state 72
    NEQ    shift, and go to state 73
    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MTP    shift, and go to state 76
    DVD    shift, and go to state 77
    MOD    shift, and go to state 78
    AND    shift, and go to state 79
    OR     shift, and go to state 145


State 139

   29 fct_decl: var_type ID '(' $@3 param_list ')' @4 FBEGIN . $@5 body FEND

    $default  reduce using rule 28 ($@5)

    $@5  go to state 146


State 140

   33 fct_decl: var_type ID '(' @6 ')' $@7 FBEGIN $@8 . body FEND

    $default  reduce using rule 45 (body)

    body  go to state 147


State 141

   44 body: body . statement
   58 control: WHILE $@12 '(' binary_expression ')' body . ENDWHILE

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    STRING    shift, and go to state 6
    BOOL      shift, and go to state 7
    ID        shift, and go to state 29
    WHILE     shift, and go to state 30
    ENDWHILE  shift, and go to state 148
    PRINT     shift, and go to state 31
    EVAL_FCT  shift, and go to state 32
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    $default  reduce using rule 60 ($@13)

    var_decl           go to state 39
    var_type           go to state 40
    statement          go to state 42
    control            go to state 43
    if2                go to state 44
    $@13               go to state 45
    print_call         go to state 46
    expression         go to state 47
    binary_expression  go to state 48


State 142

   55 param_called_list: param_called_list ',' . expression

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 149
    binary_expression  go to state 48


State 143

   53 fct_call: ID '(' @11 param_called_list ')' .

    $default  reduce using rule 53 (fct_call)


State 144

   62 if: IF '(' binary_expression ')' THEN . body ENDIF
   64   | IF '(' binary_expression ')' THEN . body ELSE $@14 body ENDIF
   66   | IF '(' binary_expression ')' THEN . body $@15 eif ENDIF

    $default  reduce using rule 45 (body)

    body  go to state 150


State 145

   93 binary_expression: expression AND expression @18 expression OR . expression

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 151
    binary_expression  go to state 48


State 146

   29 fct_decl: var_type ID '(' $@3 param_list ')' @4 FBEGIN $@5 . body FEND

    $default  reduce using rule 45 (body)

    body  go to state 152


State 147

   33 fct_decl: var_type ID '(' @6 ')' $@7 FBEGIN $@8 body . FEND
   44 body: body . statement

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    STRING    shift, and go to state 6
    BOOL      shift, and go to state 7
    ID        shift, and go to state 29
    WHILE     shift, and go to state 30
    FEND      shift, and go to state 153
    PRINT     shift, and go to state 31
    EVAL_FCT  shift, and go to state 32
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    $default  reduce using rule 60 ($@13)

    var_decl           go to state 39
    var_type           go to state 40
    statement          go to state 42
    control            go to state 43
    if2                go to state 44
    $@13               go to state 45
    print_call         go to state 46
    expression         go to state 47
    binary_expression  go to state 48


State 148

   58 control: WHILE $@12 '(' binary_expression ')' body ENDWHILE .

    $default  reduce using rule 58 (control)


State 149

   55 param_called_list: param_called_list ',' expression .
   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression

    LWR    shift, and go to state 68
    LEQ    shift, and go to state 69
    GTR    shift, and go to state 70
    GEQ    shift, and go to state 71
    EQ     shift, and go to state 72
    NEQ    shift, and go to state 73
    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MTP    shift, and go to state 76
    DVD    shift, and go to state 77
    MOD    shift, and go to state 78
    AND    shift, and go to state 79

    $default  reduce using rule 55 (param_called_list)


State 150

   44 body: body . statement
   62 if: IF '(' binary_expression ')' THEN body . ENDIF
   64   | IF '(' binary_expression ')' THEN body . ELSE $@14 body ENDIF
   66   | IF '(' binary_expression ')' THEN body . $@15 eif ENDIF

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    STRING    shift, and go to state 6
    BOOL      shift, and go to state 7
    ID        shift, and go to state 29
    ENDIF     shift, and go to state 154
    ELSE      shift, and go to state 155
    WHILE     shift, and go to state 30
    PRINT     shift, and go to state 31
    EVAL_FCT  shift, and go to state 32
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    ELSE_IF   reduce using rule 65 ($@15)
    $default  reduce using rule 60 ($@13)

    var_decl           go to state 39
    var_type           go to state 40
    statement          go to state 42
    control            go to state 43
    if2                go to state 44
    $@13               go to state 45
    $@15               go to state 156
    print_call         go to state 46
    expression         go to state 47
    binary_expression  go to state 48


State 151

   78 expression: expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . MTP expression
   81           | expression . DVD expression
   82           | expression . MOD expression
   86 binary_expression: expression . LWR expression
   87                  | expression . GTR expression
   88                  | expression . LEQ expression
   89                  | expression . GEQ expression
   90                  | expression . NEQ expression
   91                  | expression . EQ expression
   93                  | expression . AND expression @18 expression OR expression
   93                  | expression AND expression @18 expression OR expression .

    LWR    shift, and go to state 68
    LEQ    shift, and go to state 69
    GTR    shift, and go to state 70
    GEQ    shift, and go to state 71
    EQ     shift, and go to state 72
    NEQ    shift, and go to state 73
    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MTP    shift, and go to state 76
    DVD    shift, and go to state 77
    MOD    shift, and go to state 78

    $default  reduce using rule 93 (binary_expression)


State 152

   29 fct_decl: var_type ID '(' $@3 param_list ')' @4 FBEGIN $@5 body . FEND
   44 body: body . statement

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    STRING    shift, and go to state 6
    BOOL      shift, and go to state 7
    ID        shift, and go to state 29
    WHILE     shift, and go to state 30
    FEND      shift, and go to state 157
    PRINT     shift, and go to state 31
    EVAL_FCT  shift, and go to state 32
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    $default  reduce using rule 60 ($@13)

    var_decl           go to state 39
    var_type           go to state 40
    statement          go to state 42
    control            go to state 43
    if2                go to state 44
    $@13               go to state 45
    print_call         go to state 46
    expression         go to state 47
    binary_expression  go to state 48


State 153

   33 fct_decl: var_type ID '(' @6 ')' $@7 FBEGIN $@8 body FEND .

    $default  reduce using rule 33 (fct_decl)


State 154

   62 if: IF '(' binary_expression ')' THEN body ENDIF .

    $default  reduce using rule 62 (if)


State 155

   64 if: IF '(' binary_expression ')' THEN body ELSE . $@14 body ENDIF

    $default  reduce using rule 63 ($@14)

    $@14  go to state 158


State 156

   66 if: IF '(' binary_expression ')' THEN body $@15 . eif ENDIF

    ELSE_IF  shift, and go to state 159

    eif  go to state 160


State 157

   29 fct_decl: var_type ID '(' $@3 param_list ')' @4 FBEGIN $@5 body FEND .

    $default  reduce using rule 29 (fct_decl)


State 158

   64 if: IF '(' binary_expression ')' THEN body ELSE $@14 . body ENDIF

    $default  reduce using rule 45 (body)

    body  go to state 161


State 159

   67 eif: ELSE_IF . '(' binary_expression ')' THEN body
   69    | ELSE_IF . '(' binary_expression ')' THEN body ELSE $@16 body
   71    | ELSE_IF . '(' binary_expression ')' THEN body $@17 eif

    '('  shift, and go to state 162


State 160

   66 if: IF '(' binary_expression ')' THEN body $@15 eif . ENDIF

    ENDIF  shift, and go to state 163


State 161

   44 body: body . statement
   64 if: IF '(' binary_expression ')' THEN body ELSE $@14 body . ENDIF

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    STRING    shift, and go to state 6
    BOOL      shift, and go to state 7
    ID        shift, and go to state 29
    ENDIF     shift, and go to state 164
    WHILE     shift, and go to state 30
    PRINT     shift, and go to state 31
    EVAL_FCT  shift, and go to state 32
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    $default  reduce using rule 60 ($@13)

    var_decl           go to state 39
    var_type           go to state 40
    statement          go to state 42
    control            go to state 43
    if2                go to state 44
    $@13               go to state 45
    print_call         go to state 46
    expression         go to state 47
    binary_expression  go to state 48


State 162

   67 eif: ELSE_IF '(' . binary_expression ')' THEN body
   69    | ELSE_IF '(' . binary_expression ')' THEN body ELSE $@16 body
   71    | ELSE_IF '(' . binary_expression ')' THEN body $@17 eif

    ID        shift, and go to state 51
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    expression         go to state 122
    binary_expression  go to state 165


State 163

   66 if: IF '(' binary_expression ')' THEN body $@15 eif ENDIF .

    $default  reduce using rule 66 (if)


State 164

   64 if: IF '(' binary_expression ')' THEN body ELSE $@14 body ENDIF .

    $default  reduce using rule 64 (if)


State 165

   67 eif: ELSE_IF '(' binary_expression . ')' THEN body
   69    | ELSE_IF '(' binary_expression . ')' THEN body ELSE $@16 body
   71    | ELSE_IF '(' binary_expression . ')' THEN body $@17 eif
   83 expression: binary_expression .

    ')'  shift, and go to state 166

    $default  reduce using rule 83 (expression)


State 166

   67 eif: ELSE_IF '(' binary_expression ')' . THEN body
   69    | ELSE_IF '(' binary_expression ')' . THEN body ELSE $@16 body
   71    | ELSE_IF '(' binary_expression ')' . THEN body $@17 eif

    THEN  shift, and go to state 167


State 167

   67 eif: ELSE_IF '(' binary_expression ')' THEN . body
   69    | ELSE_IF '(' binary_expression ')' THEN . body ELSE $@16 body
   71    | ELSE_IF '(' binary_expression ')' THEN . body $@17 eif

    $default  reduce using rule 45 (body)

    body  go to state 168


State 168

   44 body: body . statement
   67 eif: ELSE_IF '(' binary_expression ')' THEN body .
   69    | ELSE_IF '(' binary_expression ')' THEN body . ELSE $@16 body
   71    | ELSE_IF '(' binary_expression ')' THEN body . $@17 eif

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    STRING    shift, and go to state 6
    BOOL      shift, and go to state 7
    ID        shift, and go to state 29
    ELSE      shift, and go to state 169
    WHILE     shift, and go to state 30
    PRINT     shift, and go to state 31
    EVAL_FCT  shift, and go to state 32
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    ELSE_IF   reduce using rule 70 ($@17)
    ENDIF     reduce using rule 67 (eif)
    $default  reduce using rule 60 ($@13)

    var_decl           go to state 39
    var_type           go to state 40
    statement          go to state 42
    control            go to state 43
    if2                go to state 44
    $@13               go to state 45
    $@17               go to state 170
    print_call         go to state 46
    expression         go to state 47
    binary_expression  go to state 48


State 169

   69 eif: ELSE_IF '(' binary_expression ')' THEN body ELSE . $@16 body

    $default  reduce using rule 68 ($@16)

    $@16  go to state 171


State 170

   71 eif: ELSE_IF '(' binary_expression ')' THEN body $@17 . eif

    ELSE_IF  shift, and go to state 159

    eif  go to state 172


State 171

   69 eif: ELSE_IF '(' binary_expression ')' THEN body ELSE $@16 . body

    $default  reduce using rule 45 (body)

    body  go to state 173


State 172

   71 eif: ELSE_IF '(' binary_expression ')' THEN body $@17 eif .

    $default  reduce using rule 71 (eif)


State 173

   44 body: body . statement
   69 eif: ELSE_IF '(' binary_expression ')' THEN body ELSE $@16 body .

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    STRING    shift, and go to state 6
    BOOL      shift, and go to state 7
    ID        shift, and go to state 29
    WHILE     shift, and go to state 30
    PRINT     shift, and go to state 31
    EVAL_FCT  shift, and go to state 32
    CALL      shift, and go to state 33
    STRVAL    shift, and go to state 34
    INTVAL    shift, and go to state 35
    BOOLVAL   shift, and go to state 36
    FLOATVAL  shift, and go to state 37
    '('       shift, and go to state 38

    ENDIF     reduce using rule 69 (eif)
    $default  reduce using rule 60 ($@13)

    var_decl           go to state 39
    var_type           go to state 40
    statement          go to state 42
    control            go to state 43
    if2                go to state 44
    $@13               go to state 45
    print_call         go to state 46
    expression         go to state 47
    binary_expression  go to state 48
